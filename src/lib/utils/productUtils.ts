
import axios from "axios";
import { ProductCardInfo, ProductCategory } from "@/types/wb";
import { determineCategoryBySubject } from "./categoryUtils";

// API URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ
const WB_CARD_API_URL = "https://content-api.wildberries.ru/content/v2/get/cards/list";

// –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
const productInfoCache: Record<number, ProductCardInfo> = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –ø–æ nmId
export const getProductCardInfo = async (nmId: number): Promise<ProductCardInfo | null> => {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (productInfoCache[nmId]) {
      console.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ nmId=${nmId} –≤–∑—è—Ç–∞ –∏–∑ –∫—ç—à–∞`);
      return productInfoCache[nmId];
    }

    // 2. –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
    const requestBody = {
      settings: {
        cursor: { limit: 1 },
        filter: {
          textSearch: String(nmId),
          withPhoto: -1
        }
      }
    };
    
    console.log(`üîç –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ POST API –¥–ª—è nmId=${nmId}`);
    const response = await axios.post(WB_CARD_API_URL, requestBody);
    
    // 3. –í—ã–≤–æ–¥ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
    console.log("–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞:");
    console.log(JSON.stringify(response.data, null, 2));
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –æ—Ç–≤–µ—Ç–µ
    const cards = response.data.cards;
    if (!cards || cards.length === 0) {
      console.warn(`[WARN] –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è nmId=${nmId}`);
      return null;
    }
    
    const product = cards[0];
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è "title"
    if (!product.title) {
      console.warn(`[WARN] –£ —Ç–æ–≤–∞—Ä–∞ nmId=${nmId} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ title (–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ).`);
      return null;
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–æ—Ç–æ –∏ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if (!product.photos || !product.photos[0]?.big) {
      console.warn(`[WARN] –£ —Ç–æ–≤–∞—Ä–∞ nmId=${nmId} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.`);
      return null;
    }
    
    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è "subjectName"
    if (!product.subjectName) {
      console.warn(`[WARN] –£ —Ç–æ–≤–∞—Ä–∞ nmId=${nmId} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ subjectName (–∫–∞—Ç–µ–≥–æ—Ä–∏—è).`);
      return null;
    }
    
    // 8. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ
    const productInfo: ProductCardInfo = {
      nmId: nmId,
      name: product.title,
      brand: product.brand || "",
      image: product.photos[0].big,
      category: product.subjectName,
      productCategory: determineCategoryBySubject(product.subjectName)
    };
    
    // 9. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∫—ç—à
    productInfoCache[nmId] = productInfo;
    
    return productInfo;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è nmId=${nmId}:`, error);
    return null;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
export const clearProductInfoCache = () => {
  Object.keys(productInfoCache).forEach(key => {
    delete productInfoCache[Number(key)];
  });
  console.log("–ö—ç—à –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –æ—á–∏—â–µ–Ω");
};
