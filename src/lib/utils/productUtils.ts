
import axios from "axios";
import { ProductCardResponse, ProductCardInfo } from "@/types/wb";
import { determineCategoryBySubject } from "./categoryUtils";

const WB_CARD_API_URL = "https://card.wb.ru/cards/detail";

// –ü—Ä–æ—Å—Ç–æ–π –∫—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
const productInfoCache: Record<number, ProductCardInfo> = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –ø–æ nmId
export const getProductCardInfo = async (nmId: number): Promise<ProductCardInfo | null> => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä –≤ –∫—ç—à–µ
    if (productInfoCache[nmId]) {
      console.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ nmId=${nmId} –≤–∑—è—Ç–∞ –∏–∑ –∫—ç—à–∞`);
      return productInfoCache[nmId];
    }

    const cardUrl = `${WB_CARD_API_URL}?appType=1&curr=rub&dest=12345&nm=${nmId}`;
    console.log(`üîç –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞: ${cardUrl}`);
    
    const response = await axios.get<ProductCardResponse>(cardUrl);
    
    // –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    console.log(`–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è nmId=${nmId}:`, JSON.stringify(response.data, null, 2));
    
    if (response.data && response.data.data && response.data.data.products && response.data.data.products.length > 0) {
      const product = response.data.data.products[0];
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const vol = Math.floor(product.id / 100000);
      const part = Math.floor(product.id / 1000);
      const imageBaseUrl = `https://basket-01.wb.ru/vol${vol}/part${part}/${product.id}/images/c246x328/1.jpg`;
      
      console.log(`–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imageBaseUrl}`);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ subjectName
      const category = product.subjectName || product.subject || "";
      
      const productInfo = {
        nmId: product.id,
        name: product.name,
        brand: product.brand || "",
        image: imageBaseUrl,
        category: category,
        productCategory: determineCategoryBySubject(category)
      };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
      productInfoCache[nmId] = productInfo;
      
      return productInfo;
    }
    
    console.log(`–ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è nmId=${nmId}`);
    return null;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è nmId=${nmId}:`, error);
    return null;
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
export const clearProductInfoCache = () => {
  Object.keys(productInfoCache).forEach(key => {
    delete productInfoCache[Number(key)];
  });
  console.log("–ö—ç—à –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –æ—á–∏—â–µ–Ω");
};
